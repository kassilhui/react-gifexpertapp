{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","gif","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAOaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAhBS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IAExBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAWlB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SATgB,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCvBlBG,EAAQ,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,iDACkCC,UAAUH,GAD5C,+DAEDI,MAAMF,GAFL,cAEZG,EAFY,gBAGCA,EAAKC,OAHN,uBAGXC,EAHW,EAGXA,KAEDC,EAAKD,EAAKE,KAAI,SAAAC,GAEhB,MAAM,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVC,IAAIH,EAAII,OAAOC,iBAAiBb,QAVrB,kBAcZM,GAdY,4CAAD,sDCERQ,EAAc,SAAC,GAAiB,IAAhBJ,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAG/B,OACI,sBAAKI,UAAU,mDAAf,UACI,qBAAKC,IAAKL,EAAKM,IAAKP,IACpB,4BAAIA,QCFHQ,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAGrB,ECJwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLc,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAU,WACNzB,EAASC,GACRyB,MAAK,SAAAC,GAEFH,EAAS,CACLhB,KAAKmB,EACLL,SAAQ,SAIlB,CAACrB,IAGIsB,EDhBqBK,CAAa3B,GAA7Bc,EAAZ,EAAOP,KAAYc,EAAnB,EAAmBA,QAcnB,OACI,qCACI,6BAAKrB,IACJqB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOL,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEWtBiB,EArCK,WAKhB,MAAoC1C,mBAAS,CAAC,WAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAQA,OAEI,qCACA,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEY4C,EAAWpB,KAAI,SAAAT,GAAQ,OACvB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCvBzB8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.977186bf.chunk.js","sourcesContent":["\r\nimport React, {useState} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2)\r\n        {\r\n            setCategories(cats=>[inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type='text'\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            ></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifts=async(category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=vRJUD7ZlRhpwmjwniTx7uqAaXgcXb4ks`;\r\n    const resp=await fetch(url);\r\n    const {data}=await resp.json();\r\n\r\n    const gifs=data.map(img=>{\r\n\r\n        return{\r\n           id:img.id, \r\n           title:img.title,\r\n           gif:img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n   return gifs;\r\n   //setImages(gifs);\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,gif}) => {\r\n\r\n   // console.log(props);\r\n    return (\r\n        <div className='card animate__animated animate__lightSpeedInLeft'>\r\n            <img src={gif} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","//rafc\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifts } from '../helpers/getGifs';\r\n import { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n    const {data:images,loading}=useFetchGifs(category);\r\n\r\n    // useEffect(()=>{ //sirve para que se llame una sola vez componentDidMount\r\n    //     getGifts(category)\r\n    //     .then(imgs=>setImages(imgs))\r\n    // },[category]); //[] arreglo de dependencias\r\n\r\n    // const [count,setCount]=useState(0);\r\n\r\n \r\n\r\n\r\n\r\n    //getGifts();\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map(img=>(\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n            {/* \r\n\r\n            {\r\n                images.map(image=>(\r\n                    <GifGridItem key={image.id} {...image}/>\r\n                ))\r\n            } */}\r\n\r\n            {/* <ol> */}\r\n                {/* {\r\n                    images.map((image)=>{\r\n                    return(\r\n                        <li key={image.id}>{image.title}</li>\r\n                        )\r\n                    })\r\n                } */}\r\n                {/* <li>imae</li> */}\r\n            {/* </ol> */}\r\n\r\n            {/* <button onClick={()=>setCount(count+1)}></button> */}\r\n                \r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifts } from '../helpers/getGifs';\r\n//los hooks son funciones\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifts(category)\r\n        .then(imgs=>{\r\n            \r\n            setState({\r\n                data:imgs,\r\n                loading:false\r\n            });\r\n            \r\n        })\r\n    },[category])\r\n\r\n//useEffect para que solo cambie cuando cambie la categoria\r\n    return state;\r\n\r\n}\r\n\r\n","import { useState } from 'react';\r\n\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GiftExpertApp=()=>{\r\n\r\n    //const categories=['Gatos','Perros','Conejos','Hamster'];\r\n\r\n    // const [categories, setCategories] = useState(['Gatos','Perros','Conejos','Hamster']);\r\n    const [categories, setCategories] = useState(['CNBLUE']);\r\n\r\n    //const handleAdd=()=>{\r\n       // setCategories([...categories,'cuyo']);\r\n\r\n       // setCategories(cats=>[...cats,'cuyo']);\r\n    //}\r\n\r\n    return(\r\n\r\n        <>\r\n        <h2>GiftExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr></hr>\r\n        {/* <button onClick={handleAdd}>Agregar</button> */}\r\n        \r\n        <ul>\r\n                { \r\n                    categories.map(category =>(\r\n                    <GifGrid \r\n                    key={category}\r\n                    category={category}/>\r\n                    ))\r\n                }\r\n        </ul>\r\n\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default GiftExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport GiftExpertApp from './GifExpertApp'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <GiftExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}